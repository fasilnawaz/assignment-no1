import React, { useState } from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import { View, Text, Image, FlatList, TouchableOpacity, StyleSheet, TextInput, ScrollView, Animated } from 'react-native';
import { Ionicons } from '@expo/vector-icons';

// Sample Product Data
const products = [
  {
    id: '1',
    name: 'HeadSet',
    price: 49.99,
    image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSj1txu6XJI_wIQ2HIcMFSm2sBuUYFxCqTnRA&s',
    description: 'High-quality wireless earbuds with noise cancellation.',
  },
  {
    id: '2',
    name: 'Smartwatch',
    price: 129.99,
    image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRa9e5nbiRFL64rIhbKIQsaFMDwDUW9l14-hg&s',
    description: 'Fitness tracker with heart rate monitoring.',
  },
  {
    id: '3',
    name: 'Speaker',
    price: 39.99,
    image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSTEz8_FwWKI0QYmiiLSmfUSQOAQy-aFKnpCw&s',
    description: 'Durable and water-resistant laptop backpack.',
  },
  {
    id: '4',
    name: 'Laptop',
    price: 59.99,
    image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTZI1Cmpr4SglV0-WhiTu5x6ydZolxSI7sckg&s',
    description: 'Portable Bluetooth speaker with deep bass.',
  },
];

// Home Screen
function HomeScreen({ navigation }) {
  return (
    <View style={[styles.container, { backgroundColor: '#f0f4ff' }]}>
      <TextInput style={styles.searchBar} placeholder="Search products..." placeholderTextColor="#888" />
      <FlatList
        data={products}
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => (
          <TouchableOpacity onPress={() => navigation.navigate('ProductDetails', { product: item })}>
            <View style={styles.productItem}>
              <Image source={{ uri: item.image }} style={styles.productImage} />
              <View style={styles.productInfo}>
                <Text style={styles.productName}>{item.name}</Text>
                <Text style={styles.productPrice}>${item.price.toFixed(2)}</Text>
                <Text style={styles.productDescription}>{item.description}</Text>
              </View>
            </View>
          </TouchableOpacity>
        )}
      />
    </View>
  );
}

// Product Details Screen
function ProductDetailsScreen({ route, navigation }) {
  const { product } = route.params;
  const [cart, setCart] = useState([]);
  const fadeAnim = useState(new Animated.Value(0))[0];

  const addToCart = () => {
    setCart([...cart, product]);
    Animated.timing(fadeAnim, {
      toValue: 1,
      duration: 500,
      useNativeDriver: true,
    }).start(() => {
      fadeAnim.setValue(0);
    });
    alert(`${product.name} added to cart!`);
  };

  return (
    <ScrollView style={[styles.container, { backgroundColor: '#f0f4ff' }]}>
      <Image source={{ uri: product.image }} style={styles.detailsImage} />
      <View style={styles.detailsContent}>
        <Text style={styles.detailsName}>{product.name}</Text>
        <Text style={styles.detailsPrice}>${product.price.toFixed(2)}</Text>
        <Text style={styles.detailsDescription}>{product.description}</Text>
        <View style={styles.buttonContainer}>
          <TouchableOpacity style={styles.addToCartButton} onPress={addToCart}>
            <Text style={styles.buttonText}>Add to Cart</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.goToCartButton} onPress={() => navigation.navigate('Cart')}>
            <Text style={styles.buttonText}>Go to Cart</Text>
          </TouchableOpacity>
        </View>
      </View>
    </ScrollView>
  );
}

// Cart Screen
function CartScreen() {
  const [cart] = useState([
    { id: '1', name: 'Wireless Earbuds', price: 49.99 },
    { id: '2', name: 'Smartwatch', price: 129.99 },
  ]);

  const totalPrice = cart.reduce((sum, item) => sum + item.price, 0);

  return (
    <View style={[styles.container, { backgroundColor: '#f0f4ff' }]}>
      <FlatList
        data={cart}
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => (
          <View style={styles.cartItem}>
            <Text style={styles.cartItemName}>{item.name}</Text>
            <Text style={styles.cartItemPrice}>${item.price.toFixed(2)}</Text>
          </View>
        )}
      />
      <View style={styles.totalContainer}>
        <Text style={styles.total}>Total: ${totalPrice.toFixed(2)}</Text>
        <TouchableOpacity style={styles.checkoutButton} onPress={() => alert('Proceed to Checkout')}>
          <Text style={styles.buttonText}>Checkout</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
}

// Order History Screen
function OrderHistoryScreen() {
  const orders = [
    { id: '1', name: 'Wireless Earbuds', status: 'Delivered' },
    { id: '2', name: 'Smartwatch', status: 'Shipped' },
  ];

  return (
    <View style={[styles.container, { backgroundColor: '#f0f4ff' }]}>
      <Text style={styles.heading}>Order History</Text>
      <FlatList
        data={orders}
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => (
          <View style={styles.orderItem}>
            <Text style={styles.orderItemName}>{item.name}</Text>
            <Text style={styles.orderItemStatus}>{item.status}</Text>
          </View>
        )}
      />
    </View>
  );
}

// Profile Screen
function ProfileScreen() {
  return (
    <View style={[styles.container, { backgroundColor: '#f0f4ff' }]}>
      <Text style={styles.heading}>Profile & Settings</Text>
      <TextInput style={styles.input} placeholder="Name" placeholderTextColor="#888" />
      <TextInput style={styles.input} placeholder="Email" placeholderTextColor="#888" />
      <TouchableOpacity style={styles.themeButton} onPress={() => alert('Theme Changed!')}>
        <Text style={styles.buttonText}>Change Theme</Text>
      </TouchableOpacity>
    </View>
  );
}

// Bottom Tab Navigator
const Tab = createBottomTabNavigator();

export default function App() {
  return (
    <NavigationContainer>
      <Tab.Navigator
        screenOptions={({ route }) => ({
          tabBarIcon: ({ focused, color, size }) => {
            let iconName;

            if (route.name === 'Home') {
              iconName = focused ? 'home' : 'home-outline';
            } else if (route.name === 'Cart') {
              iconName = focused ? 'cart' : 'cart-outline';
            } else if (route.name === 'OrderHistory') {
              iconName = focused ? 'list' : 'list-outline';
            } else if (route.name === 'Profile') {
              iconName = focused ? 'person' : 'person-outline';
            }

            return <Ionicons name={iconName} size={size} color={color} />;
          },
          tabBarActiveTintColor: '#6200ee',
          tabBarInactiveTintColor: 'gray',
          tabBarStyle: { backgroundColor: '#ffffff', borderTopWidth: 0 },
        })}
      >
        <Tab.Screen name="Home" component={HomeScreen} />
        <Tab.Screen name="Cart" component={CartScreen} />
        <Tab.Screen name="OrderHistory" component={OrderHistoryScreen} />
        <Tab.Screen name="Profile" component={ProfileScreen} />
      </Tab.Navigator>
    </NavigationContainer>
  );
}

// Styles (same as before)
const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
  },
  searchBar: {
    height: 50,
    borderColor: '#ccc',
    borderWidth: 1,
    borderRadius: 25,
    paddingHorizontal: 20,
    marginBottom: 16,
    backgroundColor: '#fff',
    fontSize: 16,
    color: '#333',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  productItem: {
    backgroundColor: '#fff',
    padding: 16,
    borderRadius: 12,
    marginBottom: 16,
    flexDirection: 'row',
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  productImage: {
    width: 80,
    height: 80,
    borderRadius: 8,
    marginRight: 16,
  },
  productInfo: {
    flex: 1,
  },
  productName: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
  },
  productPrice: {
    fontSize: 16,
    color: '#6200ee',
    marginTop: 4,
  },
  productDescription: {
    fontSize: 14,
    color: '#666',
    marginTop: 4,
  },
  detailsImage: {
    width: '100%',
    height: 250,
    borderRadius: 12,
    marginBottom: 16,
  },
  detailsContent: {
    paddingHorizontal: 16,
  },
  detailsName: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 8,
  },
  detailsPrice: {
    fontSize: 20,
    color: '#6200ee',
    marginBottom: 16,
  },
  detailsDescription: {
    fontSize: 16,
    color: '#666',
    marginBottom: 24,
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 16,
  },
  addToCartButton: {
    flex: 1,
    backgroundColor: '#6200ee',
    padding: 12,
    borderRadius: 25,
    marginRight: 8,
    alignItems: 'center',
  },
  goToCartButton: {
    flex: 1,
    backgroundColor: '#6200ee',
    padding: 12,
    borderRadius: 25,
    marginLeft: 8,
    alignItems: 'center',
  },
  buttonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
  cartItem: {
    backgroundColor: '#fff',
    padding: 16,
    borderRadius: 12,
    marginBottom: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  cartItemName: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
  },
  cartItemPrice: {
    fontSize: 14,
    color: '#6200ee',
    marginTop: 4,
  },
  totalContainer: {
    marginTop: 16,
    padding: 16,
    backgroundColor: '#fff',
    borderRadius: 12,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  total: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
    textAlign: 'right',
    marginBottom: 16,
  },
  checkoutButton: {
    backgroundColor: '#6200ee',
    padding: 12,
    borderRadius: 25,
    alignItems: 'center',
  },
  heading: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 16,
  },
  input: {
    height: 50,
    borderColor: '#ccc',
    borderWidth: 1,
    borderRadius: 25,
    paddingHorizontal: 20,
    marginBottom: 16,
    backgroundColor: '#fff',
    fontSize: 16,
    color: '#333',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  themeButton: {
    backgroundColor: '#6200ee',
    padding: 12,
    borderRadius: 25,
    alignItems: 'center',
  },
  orderItem: {
    backgroundColor: '#fff',
    padding: 16,
    borderRadius: 12,
    marginBottom: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  orderItemName: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
  },
  orderItemStatus: {
    fontSize: 14,
    color: '#666',
    marginTop: 4,
  },
});
